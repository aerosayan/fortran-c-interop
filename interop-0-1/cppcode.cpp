// AIM - Show C++ compilers mangle the function names, while C compilers don't.

// When we compile this C++ file and use nm to see the symbols generated by the
// compiler, we will see that the symbol for 'do_cpp_stuff' will be mangled,
// while the symbol for 'do_cpp_stuff_extern' will not be mangled.
//
// RUN : $ nm cppcode.o
//
// 000000000000000f T do_cpp_stuff_extern
// 0000000000000000 T _Z12do_cpp_stuffv
//
// A minimal explanation is given in the file ccode.c, but basically if we want
// to call C++ functions from Fortran, we have to define that function with
// extern "C". < (NOTE : The c is capital. As shown in the code below).
//
// extern "C" instructs the C++ compiler not to mangle the function name.
// Thus the function names are compatible with C and you can call the
// extern "C" C++ function from C code.
//
// So, if we want to call C++ functions from Fortran, we have to use extern "C"
//
int do_cpp_stuff()
{
    return 0;
}

extern "C" int do_cpp_stuff_extern()
{
    return 0;
}
